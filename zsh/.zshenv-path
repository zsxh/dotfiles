#!/usr/bin/env zsh

if [[ ${OS_UNAME} == "Linux" ]]; then
    # others
elif [[ ${OS_UNAME} == "Darwin" ]]; then
    export LDFLAGS="-L/opt/homebrew/opt/jpeg/lib -L/opt/homebrew/opt/libxml2/lib -L/opt/homebrew/opt/giflib/lib -L/opt/homebrew/opt/libtiff/lib -L/opt/homebrew/opt/webp/lib -L/opt/homebrew/opt/util-linux/lib -L/opt/homebrew/opt/openssl/lib"
    export CPPFLAGS="-I/opt/homebrew/opt/jpeg/include -I/opt/homebrew/opt/libxml2/include -I/opt/homebrew/opt/giflib/include -I/opt/homebrew/opt/libtiff/include -I/opt/homebrew/opt/webp/include -I/opt/homebrew/opt/util-linux/include -I/opt/homebrew/opt/openssl/include"
    export PKG_CONFIG_PATH=/opt/homebrew/opt/jpeg/lib/pkgconfig:/opt/homebrew/opt/libxml2/lib/pkgconfig:/opt/homebrew/opt/util-linux/lib/pkgconfig:/opt/homebrew/opt/poppler/lib/pkgconfig:/opt/homebrew/opt/openssl/lib/pkgconfig
    # llvm clang/clangd
    export LLVM_PATH=/opt/homebrew/opt/llvm
    # emacs
    export EMACS_APP=/Applications/Emacs.app/Contents/MacOS
    # util-linux
    export UTIL_LINUX=/opt/homebrew/opt/util-linux
    # NOTE: set PATH
    export PATH=/opt/homebrew/bin:$LLVM_PATH/bin:$UTIL_LINUX/bin:$UTIL_LINUX/sbin:$EMACS_APP:$EMACS_APP/bin:$PATH
fi

# javascript
export PNPM_HOME=$XDG_DATA_HOME/pnpm
# go
export GOPROXY=https://goproxy.cn,direct
# rust
export CARGO_HOME=$XDG_DATA_HOME/cargo

# NOTE: set PATH
export PATH=$PNPM_HOME:$LSP_SERVER:$PATH
export PATH=$HOME/.local/share/mise/shims:$HOME/.local/bin:$PATH

# if not in an interactive shell, add nix path to emacs exec-path
[[ $- != *i* ]] && export PATH="$HOME/.nix-profile/bin:/nix/var/nix/profiles/default/bin:$PATH"
